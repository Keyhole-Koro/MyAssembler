__start__:
    movis r1, -8000          ; initialize counter to 5
    movi  r2, 0              ; initialize sum to 0

loop:
    add   r2, r1             ; sum += counter
    movi  r3, 1
    cmp   r1, r3             ; counter -= 1 (comparison only)
    jz    end                ; if counter == 0, jump to end

end:
    push  r2                 ; push result onto stack

    ; === begin "print_sum" subroutine manually ===
    push  r1                 ; save old bpx
    mov   bp, sp             ; set new base pointer


    movi  r1, 10
    sub   r2, r1

    pop   r3                 ; pop sum into r3
    movi  r1, 0x01
    out   r1, r3             ; output sum to port 0x01 (example)

    addis r0, -90

    mov   sp, bp             ; restore sp
    pop   bp                 ; restore bp
    ; === end subroutine ===

    halt                     ; stop execution
