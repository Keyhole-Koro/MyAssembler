__start__:
    ; load 4 into r1
    movi r1, 4        ; r1 = 4

    ; shift left r1 (now 8)
    shl r1            ; r1 = 8

    ; compare r1 to 8
    movi r2, 8        
    cmp r1, r2        ; set flags: r1 - r2

    ; if less, it's wrong
    jl mismatchshl

    ; if greater, it's also wrong
    jg mismatchshl

    ; otherwise, they are equal â†’ jump to match
    ; (equal case doesn't need a jz since both jg/jl failed)
    jmp matchshl      

matchshl:
    ; load 16 into r3
    movi r3, 16       

    ; shift right r3 (now 8)
    shr r3            ; r3 = 8

    ; compare r3 to 8
    movi r4, 8        
    cmp r3, r4        

    ; if less, fail
    jl failure

    ; if greater, also fail
    jg failure

    ; otherwise, it's equal
    jmp success

mismatchshl:
    ; fail case for shl comparison
    movi r5, 999      
    jmp end           

failure:
    ; fail case for shr comparison
    movi r5, 888      
    jmp end           

success:
    ; success path
    movi r5, 1        ; r5 = 1 indicates success

end:
    ; program end point
    halt
