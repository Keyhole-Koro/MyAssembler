__START__:
    ; Load 4 into R1
    MOVI R1, 4        ; R1 = 4

    ; Shift left R1 (now 8)
    SHL R1            ; R1 = 8

    ; Compare R1 to 8
    MOVI R2, 8        
    CMP R1, R2        ; Set flags: R1 - R2

    ; If less, it's wrong
    JL MismatchSHL

    ; If greater, it's also wrong
    JG MismatchSHL

    ; Otherwise, they are equal â†’ jump to match
    ; (equal case doesn't need a JZ since both JG/JL failed)
    JMP MatchSHL      

MatchSHL:
    ; Load 16 into R3
    MOVI R3, 16       

    ; Shift right R3 (now 8)
    SHR R3            ; R3 = 8

    ; Compare R3 to 8
    MOVI R4, 8        
    CMP R3, R4        

    ; If less, fail
    JL Failure

    ; If greater, also fail
    JG Failure

    ; Otherwise, it's equal
    JMP Success

MismatchSHL:
    ; Fail case for SHL comparison
    MOVI R5, 999      
    JMP End           

Failure:
    ; Fail case for SHR comparison
    MOVI R5, 888      
    JMP End           

Success:
    ; Success path
    MOVI R5, 1        ; R5 = 1 indicates success

End:
    ; Program end point
    HALT
