__START__:

  ; --- prologue --------------------------------------------------
  push bp
  mov  bp, sp

  mov  r4, bp

  movi  r1, 9

  ; define variable 'x'
  mov  r2, bp
  addis r2, -4
  store r2, r1

  ; --- if statement -----------------------------------------------
  ; load variable 'x'
  mov   r1, bp
  addis  r1, -4
  load  r1, r1
  push r1
  movi  r1, 5
  pop  r2
  cmp r2, r1
  jg then_0
  jmp else_1
then_0:
  ; --- call 'add' ---
  ; load variable 'x'
  mov   r1, bp
  addis  r1, -4
  load  r1, r1
  push r1
  movi  r1, 2
  push r1
  pop r2
  pop r1
  jmp add_f

  ; x = rhs
  mov  r2, bp
  addis r2, -4
  store r2, r1
  jmp end_2
else_1:

  ; --- if statement -----------------------------------------------
  ; load variable 'x'
  mov   r1, bp
  addis  r1, -4
  load  r1, r1
  push r1
  movi  r1, 3
  pop  r2
  cmp r2, r1
  jl then_3
  jmp else_4
then_3:
  ; --- call 'add' ---
  ; load variable 'x'
  mov   r1, bp
  addis  r1, -4
  load  r1, r1
  push r1
  movi  r1, 1
  push r1
  pop r2
  pop r1
  jmp add_f

  ; x = rhs
  mov  r2, bp
  addis r2, -4
  store r2, r1
  jmp end_2
else_4:
  ; --- call 'add' ---
  ; load variable 'x'
  mov   r1, bp
  addis  r1, -4
  load  r1, r1
  push r1
  movi  r1, 3
  push r1
  pop r2
  pop r1
  jmp add_f

  ; x = rhs
  mov  r2, bp
  addis r2, -4
  store r2, r1
end_2:
  movi  r1, 0

  ; --- return ------------------------------------------------------

  ; --- program end --------------------------------------------
  halt


add_f:

  ; --- prologue --------------------------------------------------
  push bp
  mov  bp, sp

  mov  r4, bp

  ; --- store parameter 'a' (arg0)

  mov   r2, r1
  movis r0, 4
  sub   r4, r0
  store r2, r4

  ; --- store parameter 'b' (arg1)

  mov   r2, r2
  movis r0, 8
  sub   r4, r0
  store r2, r4

  ; load variable 'a'
  mov   r1, bp
  addis  r1, -4
  load  r1, r1
  push r1

  ; load variable 'b'
  mov   r1, bp
  addis  r1, -8
  load  r1, r1
  pop  r2
  add  r1, r2
  mov  r7, r1

  ; --- return ------------------------------------------------------

  ; --- epilogue --------------------------------------------------
  pop  bp
  mov  pc, lr
