; ──────────────────────────────────────────────────────────────
;  load / store self-test
; ─────────────────────────────────────────────────────────────
;  1. store  0x55aa at 0x0100, load it back, compare
;  2. store  0xaa55 at 0x0104, load it back, compare
;  on any mismatch write error-code to r5 and halt.
; ──────────────────────────────────────────────────────────────

__start__:
    ; ---------- round-trip #1 ---------------------------------
    movi r1, 0x0100      ; address
    movi r2, 0x55aa      ; value
    store   r1, r2          ; mem[0x0100] ← 0x55aa

    movi r3, 0x0100
    load   r4, r3          ; r4 ← mem[0x0100]

    movi r6, 0x55aa
    cmp  r4, r6
    jnz  fail1           ; error-code 201

    ; ---------- round-trip #2 ---------------------------------
    movi r1, 0x0104      ; address
    movi r2, 0xaa55      ; value
    store   r1, r2          ; mem[0x0104] ← 0xaa55

    movi r3, 0x0104
    load   r4, r3          ; r4 ← mem[0x0104]

    movi r6, 0xaa55
    cmp  r4, r6
    jnz  fail2           ; error-code 202

    ; ---------- success ---------------------------------------
success:
    movi r5, 1
    jmp  end

; ---------- failure handlers ---------------------------------
fail1:
    movi r5, 201         ; load/store round-trip #1 failed
    jmp  end

fail2:
    movi r5, 202         ; load/store round-trip #2 failed
    jmp  end

end:
    halt
