; ──────────────────────────────────────────────────────────────
;  LD / ST self-test
;  ─────────────────────────────────────────────────────────────
;  1. Store  0x55AA at 0x0100, load it back, compare
;  2. Store  0xAA55 at 0x0104, load it back, compare
;  On any mismatch write error-code to R5 and HALT.
; ──────────────────────────────────────────────────────────────

__START__:
    ; ---------- Round-trip #1 ---------------------------------
    MOVI R1, 0x0100      ; address
    MOVI R2, 0x55AA      ; value
    ST   R1, R2          ; mem[0x0100] ← 0x55AA

    MOVI R3, 0x0100
    LD   R4, R3          ; R4 ← mem[0x0100]

    MOVI R6, 0x55AA
    CMP  R4, R6
    JNZ  Fail1           ; error-code 201

    ; ---------- Round-trip #2 ---------------------------------
    MOVI R1, 0x0104      ; address
    MOVI R2, 0xAA55      ; value
    ST   R1, R2          ; mem[0x0104] ← 0xAA55

    MOVI R3, 0x0104
    LD   R4, R3          ; R4 ← mem[0x0104]

    MOVI R6, 0xAA55
    CMP  R4, R6
    JNZ  Fail2           ; error-code 202

    ; ---------- Success ---------------------------------------
Success:
    MOVI R5, 1
    JMP  End

; ---------- Failure handlers ---------------------------------
Fail1:
    MOVI R5, 201         ; LD/ST round-trip #1 failed
    JMP  End

Fail2:
    MOVI R5, 202         ; LD/ST round-trip #2 failed
    JMP  End

End:
    HALT
