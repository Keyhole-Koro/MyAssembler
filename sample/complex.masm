__START__:
    MOV R1, 5           ; Initialize counter to 5
    MOV R2, 0           ; Initialize sum to 0

LOOP:
    ADD R2, R1          ; sum += counter
    SUB R1, 1           ; counter -= 1
    JZ END              ; if counter == 0, jump to END
    JMP LOOP            ; otherwise, repeat loop

END:
    PUSH R2             ; Push result onto stack

    ; === Begin "PRINT_SUM" subroutine manually ===
    PUSH BP             ; Save old BP
    MOV BP, SP          ; Set new base pointer

    POP R3              ; Pop sum into R3
    MOV R1, 0x01
    OUT R1, R3          ; Output sum to port 0x01 (example)

    MOV SP, BP          ; Restore SP
    POP BP              ; Restore BP
    ; === End subroutine ===

    HALT                ; Stop execution
